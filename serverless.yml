service: nordcloud
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs14.x
  profile: nordcloud
  region: us-east-1
  iam:
    role: LambdaRole
  environment:
    #postgresql
    POSTGRESQL_HOST: ${self:custom.POSTGRESQL.HOST}
    POSTGRESQL_PORT: ${self:custom.POSTGRESQL.PORT}
    #common
    DB_NAME: ${self:custom.DB_NAME}
    USERNAME: ${self:custom.USERNAME}
    PASSWORD: ${self:custom.PASSWORD}
    TOKEN_SECRET: ${self:custom.TOKEN_SECRET}

custom: ${file(./secrets.yml)}

plugins:
  - serverless-plugin-typescript

resources:
  Resources:
    LambdaRole: ${file(./resource/LambdaRole.yml)}
    ServerlessInternetGateway: ${file(./resource/ServerlessInternetGateway.yml)}
    ServerlessVPC: ${file(./resource/ServerlessVPC.yml)}
    ServerlessVPCGA: ${file(./resource/ServerlessVPCGA.yml)}
    ServerlessSubnetA: ${file(./resource/ServerlessSubnetA.yml)}
    ServerlessSubnetB: ${file(./resource/ServerlessSubnetB.yml)}
    ServerlessSubnetC: ${file(./resource/ServerlessSubnetC.yml)}
    ServerlessSubnetGroup: ${file(./resource/ServerlessSubnetGroup.yml)}
    ServerlessSecurityGroup: ${file(./resource/ServerlessSecurityGroup.yml)}
    RouteTablePublic: ${file(./resource/RouteTablePublic.yml)}
    RoutePublic: ${file(./resource/RoutePublic.yml)}
    RouteTableAssociationSubnetA: ${file(./resource/RouteTableAssociationSubnetA.yml)}
    RouteTableAssociationSubnetB: ${file(./resource/RouteTableAssociationSubnetB.yml)}
    RouteTableAssociationSubnetC: ${file(./resource/RouteTableAssociationSubnetC.yml)}

    PostgreSqlRDSInstance: ${file(./resource/PostgreSqlRDSInstance.yml)}

functions:
  users:
    handler: src/handlers/users.main
    events:
      - httpApi:
          path: /users
          method: get
      - httpApi:
          path: /users/{username}
          method: get

  newUsers:
    handler: src/handlers/users.mainNewUsers
    events:
      - httpApi:
          path: /users
          method: post

  posts:
    handler: src/handlers/posts.main
    events:
      - httpApi:
          path: /posts
          method: get
      - httpApi:
          path: /posts
          method: post
